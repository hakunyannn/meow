package uwu.narumi.niko.command.impl;

import java.util.Arrays;
import java.util.stream.Collectors;
import uwu.narumi.niko.Niko;
import uwu.narumi.niko.command.Command;
import uwu.narumi.niko.command.CommandInfo;
import uwu.narumi.niko.exception.CommandException;
import uwu.narumi.niko.exploit.Exploit;
import uwu.narumi.niko.exploit.argument.ArgumentParser;
import uwu.narumi.niko.helper.ChatHelper;
import uwu.narumi.niko.helper.ExecutorHelper;

@CommandInfo(
    alias = "exploit",
    description = ":D",
    usage = ".exploit <method/list> [method arguments]",
    aliases = {"crash", "lag"}
)
public class ExploitCommand extends Command {

  @Override
  public void execute(String... args) throws CommandException {
    if (args.length == 0) {
      throw new CommandException("Usage: &d" + getUsage());
    }

    if (args[0].equalsIgnoreCase("list")) {
      ChatHelper.printMessage(
          "Available methods: &d" + Niko.INSTANCE.getExploitManager().getExploits().stream()
              .map(Exploit::getName).collect(Collectors.joining(", ")));
    } else if (args[0].equalsIgnoreCase("info") && args.length > 1) {
      Exploit<?> exploit = Niko.INSTANCE.getExploitManager().getExploit(args[1])
          .orElseThrow(
              () -> new CommandException(String.format("Exploit \"%s\" not found.\n", args[1])));

      ChatHelper.printMessage(
          String.format("&5%s&f: &d%s\n", exploit.getName(), exploit.getDescription()));

      /*Niko.INSTANCE.getExploitManager().getExploit(args[1])
          .ifPresentOrElse(exploit -> ChatHelper.printMessage(
              String.format("&5%s&f: &d%s\n", exploit.getName(), exploit.getDescription())),
              () -> ChatHelper.printMessage(String.format("Exploit \"%s\" not found.\n", args[0])));*/
    } else {
      Exploit<?> exploit = Niko.INSTANCE.getExploitManager().getExploit(args[0])
          .orElseThrow(() -> new CommandException(
              "Exploit not found. Use \".exploit list\" to see all exploits."));

      Object[] arguments = ArgumentParser.parseArgs(exploit,
          Arrays.copyOfRange(args, 1, args.length)); //can't inline due to fucking error lol
      ExecutorHelper.submit(() -> exploit.execute(arguments));
    }
  }
}
